name: Release

on:
  release:
    types: [prereleased]
  push:
    branches:
      - main
      - v*
      - dev*
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"

jobs:
  build:
    strategy:
      matrix:
        # Include amd64 on all platforms.
        goos: [windows, freebsd, openbsd, linux, dragonfly, darwin]
        goarch: [amd64, 386]
        exclude:
          # Exclude i386 on darwin and dragonfly.
          - goarch: 386
            goos: dragonfly
          - goarch: 386
            goos: darwin
        include:
          # BEGIN Linux ARM 5 6 7
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: arm
            goarm: 6
          - goos: linux
            goarch: arm
            goarm: 5
          # END Linux ARM 5 6 7
          # Windows ARM 7
          - goos: windows
            goarch: arm
            goarm: 7
          # BEGIN Other architectures
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: riscv64
          # BEGIN MIPS
          - goos: linux
            goarch: mips64
          - goos: linux
            goarch: mips64le
          - goos: linux
            goarch: mipsle
          - goos: linux
            goarch: mips
          # END MIPS
          # END Other architectures
      fail-fast: false

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0

    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
        
      - name: Checkout codebase
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Show workflow information
        id: get_filename
        run: |
          export _NAME=$(jq ".[\"$GOOS-$GOARCH$GOARM\"].friendlyName" -r < release/friendly-filenames.json)
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, RELEASE_NAME: $_NAME"
          echo "::set-output name=ASSET_NAME::$_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          stable: false
          go-version: '1.16.0-beta1'

      - name: Get project dependencies
        run: go mod download

      - name: Build mmp-go
        run: |
          v=$(echo ${{ steps.get_version.outputs.VERSION }} | cut -c2-)
          mkdir -p build_assets
          go build -v -o build_assets/mmp-go -trimpath -ldflags "-X github.com/Qv2ray/mmp-go/config.Version=$v -s -w -buildid=" .
      - name: Build Windows wmmp-go
        if: matrix.goos == 'windows'
        run: |
          v=$(echo ${{ steps.get_version.outputs.VERSION }} | cut -c2-)
          go build -v -o build_assets/wmmp-go.exe -trimpath -ldflags "-X github.com/Qv2ray/mmp-go/config.Version=$v -s -w -H windowsgui -buildid=" .
          cd ./build_assets || exit 1
          mv mmp-go mmp-go.exe
      - name: Prepare package
        run: cp -v ./example.json ./build_assets

      - name: Prepare package for Linux
        if: matrix.goos == 'linux'
        run: cp -rv ./systemd ./build_assets/

      - name: Create ZIP archive
        run: |
          pushd build_assets || exit 1
          zip -9vr ../mmp-go-$ASSET_NAME.zip .
          popd || exit 1
          FILE=./mmp-go-$ASSET_NAME.zip
          DGST=$FILE.dgst
          openssl dgst -md5    $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha1   $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha256 $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha512 $FILE | sed 's/([^)]*)//g' >>$DGST
      - name: Upload ZIP file to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: mmp-go-${{ steps.get_filename.outputs.ASSET_NAME }}.zip
          path: mmp-go-${{ steps.get_filename.outputs.ASSET_NAME }}.zip

      - name: Upload files to GitHub release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: ./mmp-go-${{ steps.get_filename.outputs.ASSET_NAME }}.zip*
          tag: ${{ github.ref }}
